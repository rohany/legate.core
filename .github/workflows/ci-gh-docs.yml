name: Build legate.core documentation
on:
  workflow_dispatch:
  push:
    branches-ignore:
      - gh-pages  # deployment target branch (this workflow should not exist on that branch anyway)
  pull_request:
    branches-ignore:
      - gh-pages  # deployment target branch (this workflow should not exist on that branch anyway)
env:
  COMMIT: ${{ github.event.pull_request.head.sha || github.sha }}
  PROJECT: github-core-ci
  REF: ${{ github.event.pull_request.head.ref || github.ref }}
  EVENT_NAME: ${{ github.event_name }}
  LABEL: ${{ github.event.pull_request.head.label }}
  REPO_URL: ${{ github.event.pull_request.head.repo.html_url || github.event.repository.html_url }}
  # Prevent output buffering
  PYTHONUNBUFFERED: 1
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJSON(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJSON(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJSON(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
        run: echo "$MATRIX_CONTEXT"
      
      ####################################
      # Actual build process starts here #
      ####################################
      
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Generate YAML file listing dependencies
        run: scripts/generate-conda-envs.py --python 3.10 --ctk 11.8 --os linux --compilers --openmpi

      - name: Install dependencies from generated YAML file
        run: conda env create -n legate -f environment-test-linux-py3.10-cuda11.8-compilers-openmpi.yaml

      - name: Build doxygen documentation through install.py
        run: |
          conda run -n legate /bin/bash -c "./install.py --docs"
      
      - name: Build documentation using Makefile
        working-directory: ./docs/legate/core
        run: |
          conda run -n legate /bin/bash -c "make html"

      - name: Run link checker
        working-directory: ./docs/legate/core
        run: |
          conda run -n legate /bin/bash -c "make linkcheck"

      - name: Upload documentation
        uses: actions/upload-artifact@v3
        with:
          name: legate-core-docs
          path: ./docs/legate/core/build/html/*
